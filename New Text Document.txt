Write a C program to find out the count and sum of even and odd numbers.
Take  n number of inputs from the user.

If the number is  0 or negative number, stop your loop. If the value is more than or equals to 25, do not consider that value and continue your loop. Print the count and sum of even and odd numbers.


For example:

Test case1:

n=5

1, 2, 5, 12, 13

Even Count: 2

Even Sum: 14


Odd Count: 3

Odd Sum: 19



Test case2:

n=8

1, 2, 5, -12

Even Count: 1

Even Sum: 2


Odd Count: 2

Odd Sum: 6




Test case3:

n=7

1, 2, 5, 25,  30, 13, 4

Even Count: 2

Even Sum: 6


Odd Count: 3

Odd Sum: 19

//

Write a C program that will take one input as an positive integer and print the number in following  4 types

For example: input : 5

(a)

1 2 3 4 5

1 2 3 4

1 2 3

1 2

1

(b)
1 2 3 4 5

2 3 4 5

3 4 5

4 5

5

(6)
1

1 2

1 2 3

1 2 3 4

1 2 3 4 5

(d)
            5
         4 5
      3 4 5
   2 3 4 5
1 2 3 4 5

//

Write a program to print the following pattern.


The pattern looks like a square of numbers.


If the size of square is: 3

The pattern should look like this


3 3 3 3 3

3 2 2 2 3

3 2 1 2 3

3 2 2 2 3

3 3 3 3 3


If the size of square is: 5


5 5 5 5 5 5 5 5 5

5 4 4 4 4 4 4 4 5

5 4 3 3 3 3 3 4 5

5 4 3 2 2 2 3 4 5

5 4 3 2 1 2 3 4 5

5 4 3 2 2 2 3 4 5

5 4 3 3 3 3 3 4 5

5 4 4 4 4 4 4 4 5

5 5 5 5 5 5 5 5 5

//

Print the pascal's triangle .

The numbers in Pascal's triangle are placed in such a way that each number is the sum of two numbers just above the number.

If n is 6.

           1
         1   1
       1   2   1
     1   3   3   1
   1  4    6   4   1
 1  5   10   10  5   1

//

Write a c program which will find the sum of the series

1 – x^2/2! + x^4/4! -…. upto nth term

Take two input to your program : x value  (as float) and n value (as int) .

Example

Input : x = 9, n = 10
Output : -5.1463

Input : x = 5, n = 15
Output : 0.2837